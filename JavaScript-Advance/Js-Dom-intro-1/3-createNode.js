console.log("**** CREATE NODE ****");

//?Yeni bir P elementi olusturalim
const newP = document.createElement("p");
newP.id = "new-par";
newP.setAttribute("class", "new-class");
const text = document.createTextNode("This is a new p element");
newP.appendChild(text);
//ğŸ‘† p ile yazÄ± elementini bi cocuk atamasÄ± yaparak appendChild ile baglamÄ±ÅŸ olduk 
console.log(newP);

const h2 = document.querySelector(".item-list h2");
// ğŸ‘†ITEM LISTIN altÄ±na yazdÄ±rmak istediÄŸimden h2 yÄ± burada bu sekilde html den getiriyorum yanÄ± seciyorum 
h2.after(newP);
// ğŸ‘†sonrada  h2 elementin altÄ±na olusturdugum newP elementini yazdÄ±r dÄ±yorum 

// //? getAttribute()
// getAttribute() elementi herhangi bi elementi bana getir oku demek 
console.log(newP.getAttribute("class"));
console.log(newP.getAttribute("id"));
console.log(newP.getAttribute("name"));
// ğŸ‘†mesela buradaki Ã¼Ã§ Ã¶rnekde html de ki class Ä± bana getir idsini getir name getir bana oku dedik 

// //? classList
//! classList de bizim herhangi bir elemente class vermemizi class kaldÄ±rmamÄ±zÄ± saÄŸlÄ±yor.O class var mÄ± bakmamÄ±zÄ± saÄŸloyor. 
console.log(newP.classList.contains("par")); //? true
newP.classList.add("new-class");
//ğŸ‘† newP ye yeni bir class atayabiliyorum 
console.log(newP);
newP.classList.remove("new-class");

// //? INNER HTML (Ciddi Guvenlik aciklari var)
// const ul = document.querySelector("ul");
// ul.innerHTML += `<li id="list-id" class="list">Boostrap</li>`;
