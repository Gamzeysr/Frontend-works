console.log("FETCH");
// API den verri Ã§ekme iÅŸlemi yapÄ±caz 

// fetch("https://api.github.com/users").then((res) => console.log(res));

// fetch("https://api.github.com/users")
// .then((res) => res.json())
// .then((data) => console.log(data));

// fetch("https://api.github.com/users")
//     .then((res) => {
//         console.log(res);
//         //! ðŸ‘‡error handling denir.
//         if (!res.ok) {
//             throw new Error("Something went wrong");
//         }
//         return res.json();
//     })

//     .then((data) => updateDOM(data))
//     .catch((hata) => console.log(hata));

// const updateDOM = (users) => {
//     const userDiv = document.querySelector(".users");
//     console.log(users);
//     users.forEach((user) => {
//         console.log(user);
//         userDiv.innerHTML += `<h2>${user.login}</h2>
//         <img src="${user.avatar_url}" alt=""/>


//         `;
//     });


// };

// --------------------------------------------------------------

// fetch("https://api.github.com/users")
//     .then((res) => (res.json()))
//     .then((data) => console.log(data));

// ERROR HANDLÄ°NG ðŸ‘‡
// fetch("https://api.github.com/uss")
//     .then((res) => {
//         if (!res.ok) {
//             throw new Error("yanlÄ±s gitti");
//         }

//         return res.json();
//     })
//     .then((data) => console.log(data))
//     .catch((hata) => console.log(hata));

// fetch("https://api.github.com/us")
//     .then((res) => {

//         if (!res.ok) {
//             throw new Error("yanslÄ± ");
//         }
//         return res.json();
//     })
//     .then((data) => console.log(data))
//     .catch((hata) => console.log(hata));

// ----------------------------------------------------------------
//? ðŸ‘‡asenkron senkron olayÄ±na kÄ±saca degindik tekrar burada

// let userData;


// fetch("https://api.github.com/users")
//     .then((res) => {
//         if (!res.ok) {
//             throw new Error("something went wrong");
//         }
//         return res.json();
//     })
//     .then((data) => (userData = data))
//     // datamÄ± userrDataya aktardÄ±mðŸ‘† 
//     .catch((hata) => console.log(hata));
// console.log(userData);
// const userDiv = document.querySelector(".users")

//! âœ¨Bunun sonucu ðŸ‘† Undefined dÃ¶ner Ã§Ã¼nkÃ¼; fetch api de promise baglÄ± olarakdan bi asenkron yapÄ± oldgundan kuyruga girer bu kuyrukta makro kÄ±smÄ±na girer  ilk Ã¶nce fetch yapÄ±snÄ±n iÃ§ine girmeden globaldeki userData calÄ±sÄ±r sonra fetch Ä±n iÃ§erisine girer veri alÄ±r ama bir daha biz yazdÄ±rma yapmadgÄ±mÄ±z iÃ§in undefined gÃ¶rÃ¼rÃ¼z
//!âœ¨ ve fetch Ä±n iÃ§ini gÃ¶rmek iÃ§in fonksiyona yazdÄ±rmamÄ±z lazÄ±m.Yani aÅŸaÄŸÄ±daki gibi yapmalÄ±yÄ±zðŸ‘‡ðŸ‘‡

// fetch("https://api.github.com/users")
//     .then((res) => {
//         if (!res.ok) {
//             throw new Error("something went wrong")
//         }
//         return res.json();
//     })
//     .then((data) => updateDOM(data))
//     .catch((hata) => console.log(hata));

// const updateDOM = (users) => {
//     const userDiv = document.querySelector(".users")
//     // console.log(users);
//     // artÄ±k elimde verilerim var artÄ±k verilerimi userDivine basÄ±cam 
//     users.forEach((user) => {
//         // console.log(user);
//         userDiv.innerHTML += `<h2>${user.login}</h2>
//         <img src="${user.avatar_url}" width="300px" alt=""/>`
//     });
//     // ðŸ‘†her bir itemin iÃ§ine giriyorum bu sekilde 

// }

// ðŸ‘†Bu yukarÄ±daki leri Desct. yÃ¶ntemi ile kÄ±saca yapabiliriz ðŸ‘‡

fetch("https://api.github.com/users")
    .then((res) => {
        if (!res.ok) {
            throw new Error("something went wrong")
        }
        return res.json();
    })
    .then((data) => update(data))
    .catch((hata) => console.log(hata));

const update = (users) => {
    const userDiv = document.querySelector(".users")
    users.forEach((user) => {
        const { login, avatar_url } = user; //!destructuring
        userDiv.innerHTML += `<h2>${login}</h2>
        <img src="${avatar_url}" width="300px" alt=""/>`

    })
}