//* ================= CLASS COMPONENTS AND STATE ====================
//* React'da Class-Component'ler ES6 class yapisina dayanmaktadir.
//* Cok fazla boilerplate kod icermektedir.
//* Ancak Class-Component'ler React'da state'leri barindiran ilk component yapisidir.
//* State, aslinda bir component hakkinda bilgi tutan bir React nesnesidir.
//* Bir componentin state'i zaman icerisinde degisebilir.
//* State her degistiginde React bu componenti yeninden render eder.
//* Bir state'e baslangÄ±c degeri constructor metodu icersinde this.state ile atanabilir
//* constructor'in disinda state, setState() metodu ile degistilebilir.
//* ====================================================================

import { Component } from "react";

class Counter extends Component {
    //! class componentte state kullanmam gerekirse mutlaka constructer Ä± kullanÄ±cm ğŸ‘‡
    constructor(props) {
        super(props);

        //! count state'ine baslangic degeri verdik
        this.state = {
            count: props.count || 0,
            //!ğŸ‘† Burada props.count yaparak propsdan gelen countu kullan demiÅŸ oldum
            //! counta deger verilmeyen bÄ± durumda sÄ±fÄ±ra aktarÄ±lsÄ±n dÄ±ye bu sekilde count: props.count || 0, yazÄ±yoruz 
        };
        //? increment metodunun Counter class'ina baglanmasi (bind)
        this.increment = this.increment.bind(this);
    }
    increment() {
        this.setState({
            count: this.state.count + 1,
        });
    }
    //! ğŸ‘†deÄŸiÅŸkene this.state.count ile eriÅŸebiliriz dye bu sekilde yaptÄ±k.
    //!!!!!!! DÄ°KKAT!! Bir dikkat etmemiz gereken de bu methodu bu sekilde arrow func yazmadÄ±gÄ±mÄ±z iÃ§in bind ederek bagladÄ±k ama arrow func ile kullansaydÄ±k bin etmemize gerek kalmayacakdÄ± onu de decrement methodu nu kullanarak yapmÄ±ÅŸ olduk :) 

    //! Yazmis oldugumuz metotlar default olarak classa baglanmaz.
    //! Ancak, React built-in fonksiyonlari baglidir.

    //! ğŸ‘‡otomatik bind yapÄ±yor arrow func ile yaptÄ±gÄ±mÄ±z iÃ§in 
    decrement = () => {
        this.setState({
            count: this.state.count - 1,
        });
    };
    //! DÄ°KKAT!! increment ve decrement methodunu constructorun dÄ±ÅŸÄ±na yazÄ±yoruz UNUTMA bu Ã¶nemli 

    render() {
        return (
            <div className="container text-center mt-4">
                <h1>CLASSFUL COMPONENTS</h1>
                <h2 className="display-4 text-danger">COUNT:{this.state.count}</h2>
                {/* count sayacÄ±na erÅŸmek iÃ§in {this.state.count} yazdÄ±k ğŸ‘† fonnk read yapmÄ±ÅŸ olduk burada */}
                <button onClick={this.increment} className="btn btn-success">
                    INC
                </button>



                <button onClick={this.decrement} className="btn btn-danger">
                    DEC
                </button>
            </div>
            // INC ve DEC butonunda ise fonk atama yaptÄ±k 
        );
    }
}

export default Counter;

